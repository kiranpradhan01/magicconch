{"version":3,"sources":["magicconch.jpg","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["responses","App","className","id","style","fontSize","position","left","src","conch","height","alt","marginBottom","marginRight","onClick","e","preventDefault","randomResponse","Math","floor","random","length","console","log","document","getElementById","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oJAAe,G,KCAA,IDAA,IAA0B,wC,cEInCA,EAAY,CACd,KACA,MACA,QACA,mBACA,UACA,aACA,aA2CWC,MAzCf,WAeE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,gCACE,mBAAGC,GAAG,WAAWC,MAAO,CAAEC,SAAU,OAAQC,SAAU,WAAYC,KAAM,WAGxE,qBAAKC,IAAKC,EAAOL,MAAO,CAAEM,OAAQ,SAAUC,IAAI,uBAGlD,mBAAGT,UAAU,eAAb,iCAGA,sBAAKE,MAAO,CAAEQ,aAAc,QAA5B,UACE,uBAAOT,GAAG,WAAWC,MAAO,CAAES,YAAa,UAG3C,wBAAQC,QA9BhB,SAAsBC,GACpBA,EAAEC,iBAKF,IAAIC,EAAiBC,KAAKC,MAAMD,KAAKE,SAAWpB,EAAUqB,QAAU,EAEpEC,QAAQC,IAAIN,GAGZO,SAASC,eAAe,YAAYC,UAAY1B,EAAUiB,IAmBpD,0BCjCKU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASC,eAAe,SAM1BE,K","file":"static/js/main.e6592750.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/magicconch.3e8f08ea.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport conch from './magicconch.jpg';\r\nimport './App.css';\r\n\r\nconst responses = [\r\n    \"no\",\r\n    \"yes\",\r\n    \"maybe\",\r\n    \"try asking again\",\r\n    \"perhaps\",\r\n    \"it depends\",\r\n    \"game over\",\r\n];\r\nfunction App() {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // clear the 'question' textbox\r\n\r\n    // find a RANDOM value from the 'responses' array\r\n    let randomResponse = Math.floor(Math.random() * responses.length) + 1;\r\n    \r\n    console.log(randomResponse);\r\n\r\n    // set the text value of 'response' to be the result of step 2\r\n    document.getElementById('response').innerText = responses[randomResponse];\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div>\r\n          <p id=\"response\" style={{ fontSize: '75px', position: 'absolute', left: '500px'}}>\r\n            \r\n          </p>\r\n          <img src={conch} style={{ height: '500px'}} alt=\"the magic conch\" />\r\n        </div>\r\n        \r\n        <p className=\"title-prompt\">\r\n          Ask the Magic Conch\r\n        </p>\r\n        <div style={{ marginBottom: '50px' }}>\r\n          <input id=\"question\" style={{ marginRight: '10px' }}>\r\n          \r\n          </input>\r\n          <button onClick={handleSubmit}>\r\n            Ask\r\n          </button>\r\n        </div>\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}